<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>_Place_Once_Directed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>thing_width_20</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player structure creation, d3d init
{
    global.allowbackgroundgame=true;
    global.bggame_lastspot=levelarena;
    
    global.playerteleported=0;
    
    global.rendersurface=0;
    global.renderwindow=0;

    renderdirection=0;
    global.sinewiggle=0;
    
    var global.facestate=0;
    var global.morph=0;
    
    var global.wigglez=0;
    var global.footz=0;
    var global.lookz=0;
    var global.objz=0;
    var global.flightz=0;
    var global.zblock=0;
    var global.isflying=0;
    var global.isinwater=0;
    var global.isunderwater=0;
    var global.ceilingallowed=0;
    var global.hp=25;
    var global.hpmax=25;
    var global.mp=25;
    var global.mpmax=25;
    var global.playerlevel = 1;
    var global.playermorph=morph.human;
    var global.zspeed=0;
    var global.zbounce=0;
    var global.inair=0;
    var global.waterclip=0;
    var global.surfacelevel=0;
    var global.waterlevel=0;
    var global.ceilz=0;
    var global.noclip=0;
    var global.notarget=0;
    var global.mouselook=0;
    var global.yaw=0;
    var global.currentmusic=0;
    
    //lump viewer
    var global.currentviewlump=0;
    var global.currentdatlump=0;

    var pausex,pausey;
    var global.isdead=0;

    //map editor
    var global.mapeditor = 0;
    var global.mapeditmode = 0;
    var global.editcell = 0;
    var global.copyvalue = 0;   //clipboard
    
    var global.oldx = 0;
    var global.oldy = 0;
    
    var global.alpha = 1.0;
    var global.pulsestate = 0;
    
    enum editmode {
        floors = 0,
        ceilings = 1,
        wallh = 2,
        wallv = 3,
        doors = 4,
        NUMMODES
    }

    global.gamerunning=true;
    
    score = 0;

    var global.wiggledir=-1;
    friction = 0.2;
    
  d3d_start();
  display_set_gui_size(320,200);
  d3d_set_hidden(true);
  
  if(!R_LIGHTING_ENABLED) {
    d3d_set_lighting(false);
  }
  
  else if(R_LIGHTING_ENABLED) {
    d3d_set_lighting(true);
  }
  
  d3d_set_culling(true);
  texture_set_interpolation(false);
  
  alarm[9]=60*10;
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screenshot handling
{
    var i=0;

    for(i=0;i&lt;global.MAXSCREENSHOTS;i++) {
        if(!file_exists("caster"+string(i)+".png")) {
            screenshotnum = i;
            exit;
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Map editor init
{

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear system message
{
    global.systemmsg = "";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage ticker for environmental stuff
{

    if(global.isunderwater &amp;&amp; global.playermorph != morph.frog) {
        global.hp -= 2;
        alarm[10]=15;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Natural player health regen
{
    global.hp ++;
    global.mp ++;
    alarm[9]=60*10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Died!
{
        global.currentlevel = gamelevels.ruinsa;
        
        tmpstr = M_GetMapFileName(global.currentlevel) + ".map";

        CA_UnloadMap();
        M_SetupLevel(global.currentlevel);
        CA_ConstructMapDebug(tmpstr);
        
        global.footz = 0;
        global.inair = 0;
        global.isdead = 0;
        global.hp = global.hpmax;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

    var c = P_ObjectInCell(self);
    var d = global.mapbuf_tile_floors[c];
    var t = instance_place(x,y,thing);

    //hack - this is how we detect if we're in a water tile
    if(!global.isflying &amp;&amp; !global.inair) {
    switch(d) {
        default:
            global.isinwater = 0;
            global.waterclip = 0;
            global.sinewiggle = 0;
            break;
        case 15:
        case 16:
        case 17:
        case 96:
        case 97:
        case 98:
            global.waterclip = -20;
            global.sinewiggle = 1;
            break;
    }
    }
    
    if(global.sinewiggle &amp;&amp; !global.isinwater) {
        audio_play_sound_at(splash1a,x,y,0,1,280,0.5,false,5);
        global.isinwater = 1;
    }

    x=clamp(x,0,room_width-sprite_width);
    y=clamp(y,0,room_height-sprite_height);

      global.camsin = sin(direction*pi/180);
      global.camcos = cos(direction*pi/180);
      
      switch(global.playermorph) {
        case morph.human:
            global.lookz = morpheyes.human;
            break;
        case morph.cat:
            global.lookz = morpheyes.cat;
            break;
        case morph.caun:
            global.lookz = morpheyes.caun;
            break;
        case morph.opsis:
            global.lookz = morpheyes.opsis;
            break;
        case morph.frog:
            global.lookz = morpheyes.frog;
            break;
      }

      //test - detect 3D objects
      if(t != noone &amp;&amp; t.height &gt; 0)
        global.objz = t.height;

      else global.objz = 0;



      if(global.footz &gt; global.objz) {
            var zlimit = global.levelheight-global.lookz-10;
            
            if(!global.isflying &amp;&amp; !global.isunderwater &amp;&amp; global.footz &gt; global.objz) {
                global.zspeed = max(global.zspeed-0.10,-9.6);
                global.footz += global.zspeed;

                if(global.footz &gt; zlimit) {
                    global.zspeed = 0;
                }
                    }
      }
      else if(global.footz &lt; global.objz) {
            global.zspeed = 0;
            global.footz = global.objz;
            global.inair = 0;
      }
      
      if(global.isunderwater) {
        global.waterclip = 0;
        global.sinewiggle = 1;
        friction = 0.02;
      }
      else if(!global.isunderwater) {
        if(global.waterclip &lt; 0) friction = 0.02;
        else friction = 0.2;
      }
      
      if(global.hp &lt;= 0 &amp;&amp; global.isdead == 0) {
        global.hp = 0;
        global.isdead = 1;
        audio_play_sound(death01b,1,false);
        alarm[0]=60;
      }
      
    if(global.sinewiggle == 1) {
        global.wigglez = sin(current_time/192) * 4;
    }

      else if(global.hp &gt; global.hpmax) global.hp = global.hpmax;
      
    if(score &gt; global.xptonext * global.playerlevel) {
        global.playerlevel++;
        global.systemmsg = "you feel a surge of life and power.";
        global.mpmax = 25*global.playerlevel;
        alarm[11]=60*3;
    }
      
      audio_listener_position(x,y,global.footz);
      
    var zt = global.footz + global.lookz;
    global.zblock = round((zt / global.levelheight) * 13);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.mapeditor) {
        global.editcell = ME_UpdateHighlight();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="collidable_primitive">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

    if(global.noclip || !other.collision) exit;
    
    if(global.footz &gt;= other.height+other.z) exit;

   x = xprevious;
   y = yprevious;

   if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp; not place_meeting(x+hspeed,y,collidable_primitive)) {
   x += hspeed;
   exit;
   }
   
   if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp; not place_meeting(x,y+vspeed,collidable_primitive)) {
   y += vspeed;
   exit;
   }
   speed = 0;

} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="99">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x += lengthdir_x(2,direction-90);
y += lengthdir_y(2,direction-90);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="97">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x += lengthdir_x(2,direction+90);
y += lengthdir_y(2,direction+90);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning = true) {
    if (speed &lt; 2) speed = min(2,speed+0.4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning = true) {
    if (speed &gt; -2) speed = min(-2,speed-0.25);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if(!global.inair) {
x += lengthdir_x(2,direction-90);
y += lengthdir_y(2,direction-90);
}

else {
x += lengthdir_x(0.12,direction-90);
y += lengthdir_y(0.12,direction-90);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

if(!global.inair) {
x += lengthdir_x(2,direction+90);
y += lengthdir_y(2,direction+90);
}

else {
x += lengthdir_x(0.12,direction+90);
y += lengthdir_y(0.12,direction+90);
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning = true) {
    if (speed &gt; -2) speed = min(-2,speed-0.25);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning = true)
    direction -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning = true) {
    if (speed &lt; 2) speed = min(2,speed+0.4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning = true)
    direction += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

    if(global.inair) exit;
    
    var c = P_ObjectInCell(self);
    var d = global.mapbuf_tile_floors[c];
    var cansubmerge=0;

    //hack: these tile numbers can submerge
    switch(d) {
        default:
            break;
        case 15:
        case 16:
        case 17:
        case 96:
        case 97:
        case 98:
            cansubmerge = 1;
            break;
    }

    var desired = global.footz - 8;
    
    //todo: check for collisions, water
    if(desired &gt;= 0) {
        global.footz = desired;
    }
    
    else if(desired &lt; 0 &amp;&amp; cansubmerge) {
        if(global.waterlevel &amp;&amp; !global.isflying) event_user(13);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var desired = global.footz + 8;
    var zlimit = global.levelheight - global.lookz - 10;

    var c = P_ObjectInCell(self);
    var d = global.mapbuf_tile_ceils[c];
    var cansurface=0;

    //hack: these tile numbers can surface
    switch(d) {
        default:
            break;
        case 15:
        case 16:
        case 17:
        case 96:
        case 97:
        case 98:
            cansurface = 1;
            break;
    }

    if(global.isflying || global.isunderwater) {
    if(zlimit &gt; desired) {
    global.footz = desired;
    }

    else if(zlimit &lt; desired &amp;&amp; cansurface) {
        event_user(14);
    }
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface
{
        global.footz=0;
        global.inair = false;
        global.currentlevel = global.surfacelevel;
        tmpstr = M_GetMapFileName(global.currentlevel) + ".map";

        CA_UnloadMap();
        M_SetupLevel(global.currentlevel);
        CA_ConstructMapDebug(tmpstr);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go underwater

{
    global.waterclip=0;
        global.currentlevel = global.waterlevel;

        tmpstr = M_GetMapFileName(global.currentlevel) + ".map";

        CA_UnloadMap();
        M_SetupLevel(global.currentlevel);
        CA_ConstructMapDebug(tmpstr);        

    global.footz = global.levelheight - 72;
    global.inair = false;
    if(global.playermorph != morph.frog) {
        alarm[10]=1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    surface_reset_target();
    d3d_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var playerz=global.lookz+global.footz+global.waterclip+global.flightz;
    var r=640/400;
    var sw=640;
    var sh=400;
    
    if(global.isunderwater) global.sinewiggle = 1;
    
    if(global.sinewiggle == 1) playerz += global.wigglez;
    else global.wigglez = 0;

    if(!surface_exists(global.rendersurface)) {
        //testing some different render parameters
        sw = 1920;
        sh = 1080;
        view_wview[0]=sw;
        view_hview[0]=sh;
        global.rendersurface = surface_create(sw,sh);
        r = sw/sh;
    }
    
    if(surface_get_width(global.rendersurface) != surface_get_width(application_surface) || surface_get_height(global.rendersurface) != surface_get_height(application_surface)) {
        surface_free(global.rendersurface);
        //testing some different render parameters
        sw = 1920;
        sh = 1080;
        view_wview[0]=sw;
        view_hview[0]=sh;
        global.rendersurface = surface_create(sw,sh);
        r = sw/sh;
    }

    surface_set_target(global.rendersurface);
    draw_clear_alpha(global.fogcolor,1.0);
    d3d_start();
    d3d_set_projection_ext(x,y,playerz, x+cos(direction*pi/180),y-sin(direction*pi/180),playerz+(global.yaw*pi/180), 0,0,1,60,r,0.1,384);
    draw_set_alpha_test(true);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If game is running, set some D3D parameters

{
    if(global.gamerunning == true) {
   // set the projection
    // set color and transparency
    draw_set_alpha(1);
    d3d_set_hidden(true);
    draw_set_color(c_white);
    if(R_LIGHTING_ENABLED) {
        d3d_light_define_ambient(make_color_rgb(64,64,64));
    }
    d3d_set_fog(true,global.fogcolor,global.fogstart,global.fogstart+global.foglength);
    }
    else {
        d3d_end();
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var tmpstring="";
    var tmp = 0;
    
    tmpstring = get_string("ravdata.dat lump num to examine:","0");
    tmp = real(tmpstring);
    
    if(tmp &gt; global.ravdata_numentries) {
        show_message(tmpstring + " &gt; numlumps");
        exit;
    }
    
    global.currentdatlump = tmp;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var tmpstring="";
    var tmp = 0;
    
    tmpstring = get_string("shadow.lib lump num to examine:","0");
    tmp = real(tmpstring);
    
    if(tmp &gt; global.shadowlib_numentries) {
        show_message(tmpstring + " &gt; numlumps");
        exit;
    }
    
    global.currentviewlump = tmp;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="117">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.mapeditor) {
        var name = get_open_filename("WC maps|*.map","");
        if(name != "") ME_Load(name);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.mapeditor) {
        var name = get_save_filename("WC maps|*.map","");
        if(name != "") ME_Save(name);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Notarget
{
    global.notarget = (global.notarget == 0);
    global.systemmsg="notarget "+string(global.notarget);
    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RenderStats

{
    global.systemmsg = "fps:"+string(fps)+" x:"+string(x)+" y:"+string(y);
    alarm[11]=180;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var i=0;
    var maxscreens=99;
    
    while(file_exists("caster"+string(i)+".png") )
    {
        if(i &lt; maxscreens) i++;
    }
    screen_save("caster"+string(i)+".png");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="109">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var ttc = 0;
    var inst = 0;
    var new = 0;
    var tmptex = 0;

    //if floor mode...
    
    if(global.mapeditmode = editmode.floors) {
        --global.mapbuf_tile_floors[global.editcell];
        ME_UpdateCellFloor();
    }
    
    //if ceiling mode...
    else if(global.mapeditmode = editmode.ceilings) {
        --global.mapbuf_tile_ceils[global.editcell];
        ME_UpdateCellCeiling();
        if(!inst &amp;&amp; global.ceilingallowed) {
            ttc = 1;
            global.mapbuf_tile_ceils[global.editcell] = ttc;
            tmptex = ds_map_find_value(global.TextureReference,"floor"+string(ttc));
            new = instance_create(edit_highlight.x,edit_highlight.y,ceil_primitive);
            new.flat = tmptex;
        }
    }

    //if wallh mode...
    else if(global.mapeditmode = editmode.wallh) {
        inst = instance_place(edit_highlight.x+32, edit_highlight.y, wall_primitive);
        if(inst &amp;&amp; global.mapbuf_tile_wallv[global.editcell] &gt; 1) {
            ttc = --global.mapbuf_tile_wallv[global.editcell];
            tmptex = ds_map_find_value(global.TextureReference,"wall"+string(ttc));
            inst.texture = tmptex;
            inst.tz = background_get_height(tmptex);
        }
        else if(!inst) {
            exit;
        }
    }

    //if wallv mode...
    else if(global.mapeditmode = editmode.wallv) {
        inst = instance_place(edit_highlight.x, edit_highlight.y+32, wall_primitive);
        if(inst &amp;&amp; global.mapbuf_tile_wallh[global.editcell] &gt; 1) {
            ttc = --global.mapbuf_tile_wallh[global.editcell];
            tmptex = ds_map_find_value(global.TextureReference,"wall"+string(ttc));
            inst.texture = tmptex;
            inst.tz = background_get_height(tmptex);
        }
        else if(!inst) {
            exit;
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="107">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var ttc = 0;
    var inst = 0;
    var new = 0;
    var tmptex = 0;

    //if floor mode...
    
    if(global.mapeditmode = editmode.floors) {
        ++global.mapbuf_tile_floors[global.editcell];
        ME_UpdateCellFloor();
    }
    
    //if ceiling mode...
    else if(global.mapeditmode = editmode.ceilings) {
        inst = instance_place(edit_highlight.x+32, edit_highlight.y, wall_primitive);
        if(inst) {
            ++global.mapbuf_tile_ceils[global.editcell];
            ME_UpdateCellCeiling();
        }
        else if(!inst &amp;&amp; global.ceilingallowed) {
            global.mapbuf_tile_ceils[global.editcell] = 1;
            tmptex = ds_map_find_value(global.TextureReference,"floor"+string(ttc));
            new = instance_create(edit_highlight.x,edit_highlight.y,ceil_primitive);
            new.flat = tmptex;
        }
    }
    
    //if wallh mode...
    else if(global.mapeditmode = editmode.wallh) {
        inst = instance_place(edit_highlight.x+32, edit_highlight.y, wall_primitive);
        if(inst &amp;&amp; global.mapbuf_tile_wallv[global.editcell] &lt; global.numtextures) {
            ttc = ++global.mapbuf_tile_wallv[global.editcell];
            tmptex = ds_map_find_value(global.TextureReference,"wall"+string(ttc));
            inst.texture = tmptex;
            inst.tz = background_get_height(tmptex);
        }
        else if(!inst) {
            ttc = 1;
            global.mapbuf_tile_wallv[global.editcell] = ttc;
            tmptex = ds_map_find_value(global.TextureReference,"wall"+string(ttc));
            new = instance_create(edit_highlight.x+64,edit_highlight.y,wall_primitive);
            new.texture = tmptex;
            new.z = 0;
            new.tz = background_get_height(tmptex);
            new.x1 = new.x-64;
            new.x2 = new.x;
            new.y1 = new.y;
            new.y2 = new.y;
            new.collision = 1;
            new.mask_index = horiz_mask;
            new.height = 65536;
        }
    }

    //if wallv mode...
    else if(global.mapeditmode = editmode.wallv) {
        inst = instance_place(edit_highlight.x, edit_highlight.y+32, wall_primitive);
        if(inst &amp;&amp; global.mapbuf_tile_wallh[global.editcell] &lt; global.numtextures) {
            ttc = ++global.mapbuf_tile_wallh[global.editcell];
            tmptex = ds_map_find_value(global.TextureReference,"wall"+string(ttc));
            inst.texture = tmptex;
            inst.tz = background_get_height(tmptex);
        }
        else if(!inst) {
            ttc = 1;
            tmptex = ds_map_find_value(global.TextureReference,"wall"+string(ttc));
            global.mapbuf_tile_wallh[global.editcell] = ttc;
            new = instance_create(edit_highlight.x,edit_highlight.y+64,wall_primitive);
            new.texture = tmptex;
            new.z = 0;
            new.tz = background_get_height(tmptex);
            new.x1 = new.x;
            new.x2 = new.x;
            new.y1 = new.y-64;
            new.y2 = new.y;
            new.collision = 1;
            new.mask_index = vert_mask;
            new.height = 65536;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Print level debugging statistics

{
    var tx = floor(player.x/64);
    var ty = floor(player.y/64);
    var cell = P_ObjectInCell(player);

    global.systemmsg="x:"+string(tx)+" y:"+string(ty)+" z:"+string(global.footz)+" a:"+string(player.direction)+" g:"+string(global.currentlevel)+" u:"+string(global.mapbuf_tile_wallh[cell])+" v:"+string(global.mapbuf_tile_wallv[cell])+" l:"+string(global.mapbuf_tile_floors[cell])+" h:"+string(global.mapbuf_tile_ceils[cell]);
    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="86">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Print game version to interface

{
    if(global.gameversion == installtype.floppy) {
    global.systemmsg = "Floppy 1.12F (c) RAVEN / WindowCaster "+ENGINE_VERSION;
    }

    else if(global.gameversion == installtype.cd) {
    global.systemmsg = "CD 1.01F (c) RAVEN / WindowCaster "+ENGINE_VERSION;
    }

    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>CA_CheckNumForNameDat</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"startflats"</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.flightz = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    var tmp = get_string("xp to grant or take away:",0);
    score += real(tmp);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="78">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.mapeditor) {
        if(global.mapeditmode &lt; editmode.NUMMODES - 1) {
            global.mapeditmode++;
        }
        else global.mapeditmode = editmode.floors;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(!global.mapeditor) {
        global.mouselook = 1;
        global.mapeditor = 1;
        global.notarget = 1;
    }
    else if(global.mapeditor) {
        global.mouselook = 0;
        global.yaw = 0;
        global.notarget = 0;
        global.mapeditor = 0;
        instance_destroy(edit_highlight);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.systemmsg = "we're updating our privacy policy.";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Doors
{
    if(global.mapeditor) {
        var tmpr = "";
        var tmpg = "";
        var tmpb = "";
        var tmpc = 0;

        tmpr = get_integer("input fog R component:", 0);
        tmpg = get_integer("input fog G component:", 0);
        tmpb = get_integer("input fog B component:", 0);

        tmpc = make_color_rgb(tmpr,tmpg,tmpb);

        global.fogcolor = tmpc;

        global.fogstart = get_integer("fog start (in mapunits):", 64);
        global.fogend   = get_integer("fog length (in mapunits):", 320);

        exit;
    }

    var closest = instance_nearest(x,y,door_primitive);
    if(!closest) exit;
    
    global.systemmsg = "door id "+string(closest);
    alarm[11]=60*3;

    if(distance_to_object(closest) &gt; 32) exit;              //early fail for distance

    audio_play_sound_at(stone02c,closest.x,closest.y,32,64,256,0.5,false,5);

    if(closest.doordir == 1) {
        if(closest.doorstate == 0) {
            closest.doorstate = 1;
            closest.alarm[2] = 1;
        }
        else if(closest.doorstate == 2) {
            closest.doorstate = 3;
            closest.alarm[2] = 1;
        }
    }

    if(closest.doordir == 2) {
        if(closest.doorstate == 0) {
            closest.doorstate = 1;
            closest.alarm[3] = 1;
        }
        else if(closest.doorstate == 2) {
            closest.doorstate = 3;
            closest.alarm[3] = 1;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouselook mode
{
    if(!global.mapeditor) {
    if(!global.mouselook) {
        global.mouselook=true;
        global.yaw = 0;
        global.systemmsg="mouselook on";
    }
    else if(global.mouselook) {
        global.mouselook=false;
        global.systemmsg="mouselook off";
        global.yaw = 0;
    }
    alarm[11]=180;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.mapeditor) {
        var tmpstr = get_string("enter tile num to clear map with (max is "+string(global.numflats-1)+") (type no to cancel):","no");
        if(tmpstr == "no" || tmpstr == "No" || tmpstr == "NO") exit;
        else ME_ClearMap(real(tmpstr));
        exit;
    }

    var closest = instance_nearest(x,y,thing);
    if(!closest) exit;
    if(closest.thingid == -1) exit;  //static objects do not have an id assigned at this time
    else {
        var arc = closest.thingid;
        var tspr = global.maparcs[arc];
        global.systemmsg = "arcspr(closest): "+tspr.spritename;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.mapeditor) {
        if(global.ceilingallowed) {
            instance_create(player.x,player.y,info_sky);
            global.ceilingallowed = 0;
        }
        else if(!global.ceilingallowed) {
            instance_destroy(info_sky);
            global.ceilingallowed = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    score -= 100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.playermorph = morph.frog;
    global.isflying = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.isunderwater) exit;

    global.playermorph = morph.opsis;
    global.isflying = true;
    global.waterclip = 0;
    global.sinewiggle = 0;
    
    global.hpmax = 25 * global.playerlevel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.playermorph = morph.caun;
    global.isflying = false;
    
    global.hpmax = 20 * global.playerlevel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.playermorph = morph.cat;
    global.isflying = false;
    
    global.hpmax = 35 * global.playerlevel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.playermorph = morph.human;
    global.isflying = false;
    
    global.hpmax = 25 * global.playerlevel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    score += 100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="46">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to previous lump
{

    if(global.mapeditor) {
        var inst = 0;
        
        //if ceiling mode...
        if(global.mapeditmode == editmode.ceilings) {
            inst = instance_place(edit_highlight.x, edit_highlight.y, ceil_primitive);
            if(inst) {
                global.mapbuf_tile_ceils[global.editcell] = 0;
                instance_destroy(inst);
            }
        }
        
        //if wallh mode...
        else if(global.mapeditmode == editmode.wallh) {
            inst = instance_place(edit_highlight.x+32, edit_highlight.y, wall_primitive);
            if(inst) {
                global.mapbuf_tile_wallv[global.editcell] = 0;
                instance_destroy(inst);
            }
        }

        //if wallv mode...
        else if(global.mapeditmode == editmode.wallv) {
            inst = instance_place(edit_highlight.x, edit_highlight.y+32, wall_primitive);
            if(inst) {
                global.mapbuf_tile_wallh[global.editcell] = 0;
                instance_destroy(inst);
            }
        }
        
        //if door mode...
        else if(global.mapeditmode == editmode.doors) {
            inst = instance_place(edit_highlight.x+32,edit_highlight.y+32,door_primitive);
            if(inst) {
                instance_destroy(inst);
            }
        }
    exit;
    }

    var tmpobj;

    if(global.currentviewlump &gt; 0) {
    global.currentviewlump -= 1;
    }
    
    tmpobj = global.shadowlib_info[global.currentviewlump];
    
    global.systemmsg = "n:"+tmpobj.name+" ("+string(global.currentviewlump)+") s:"+string(tmpobj.size)+" o:"+string(tmpobj.offset);
    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="45">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to next lump
{
    if(global.mapeditor &amp;&amp; global.mapeditmode == editmode.doors) {
        var h = edit_highlight;
        var firstdoor = CA_CheckNumForNameDat("firstdoor");
        var lastdoor = CA_CheckNumForNameDat("endwalls")-1;
        var startwalls = CA_CheckNumForNameDat("startwalls");
        
        var cx = 0;
        var cy = 0;
        var cc = 0;
        
        firstdoor -= startwalls;
        lastdoor -= startwalls;
        
        var newdoor = 0;
        
        var inp = 0;
        var td = 0;
        
            //if enclosing walls are north/south
            if(instance_place(h.x+32,h.y,wall_primitive) &amp;&amp; instance_place(h.x+32,h.y+64,wall_primitive) &amp;&amp; !instance_place(h.x+32,h.y+32,door_primitive)) {
                inp = get_integer("texture id? (min is "+string(firstdoor)+", max is "+string(lastdoor)+")",string(firstdoor));
                td = ds_map_find_value(global.TextureReference,"wall"+string(inp));
                newdoor = instance_create(h.x+32,h.y+64,door_primitive);
                
                cy = floor(newdoor.y/64);
                cx = floor(newdoor.x/64);
                cc = (cy*32) + cx;
                
                global.mapbuf_tile_packdoors[cc] = inp;
                
                newdoor.doordir = 1;
                newdoor.x1 = newdoor.x;
                newdoor.x2 = newdoor.x;
                newdoor.y1 = newdoor.y-64;
                newdoor.y2 = newdoor.y;
                newdoor.doorlen = 0;
                newdoor.isactive = 0;
                newdoor.doorstate = 0;
                newdoor.z = 0;
                newdoor.height = 65536;
                newdoor.texture = td;
                newdoor.tz = background_get_height(newdoor.texture);
                newdoor.mask_index = vert_mask;
            }
            
            //if enclosing walls are east/west
            else if(instance_place(h.x,h.y+32,wall_primitive) &amp;&amp; instance_place(h.x+64,h.y+32,wall_primitive) &amp;&amp; !instance_place(h.x+32,h.y+32,door_primitive)) {
                inp = get_integer("texture id? (min is "+string(firstdoor)+", max is "+string(lastdoor)+")",string(firstdoor));
                newdoor = instance_create(h.x+64,h.y+32,door_primitive);
                newdoor.doordir = 2;
                newdoor.x1 = newdoor.x-64;
                newdoor.x2 = newdoor.x;
                newdoor.y1 = newdoor.y;
                newdoor.y2 = newdoor.y;
                newdoor.doorlen = 0;
                newdoor.isactive = 0;
                newdoor.doorstate = 0;
                newdoor.z = 0;
                newdoor.height = 65536;
                newdoor.texture = ds_map_find_value(global.TextureReference,"wall"+string(inp));
                newdoor.tz = background_get_height(newdoor.texture);
                newdoor.mask_index = horiz_mask;
            }
        
        exit;
    }

    var tmpobj;

    if(global.currentviewlump &lt; global.shadowlib_numentries-1) {
    global.currentviewlump += 1;
    }
    
    tmpobj = global.shadowlib_info[global.currentviewlump];
    
    global.systemmsg = "n:"+tmpobj.name+" ("+string(global.currentviewlump)+") s:"+string(tmpobj.size)+" o:"+string(tmpobj.offset);
    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="36">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to previous lump
{

    var tmpobj;

    if(global.currentdatlump &lt; global.ravdata_numentries - 1) {
    global.currentdatlump += 1;
    }
    
    tmpobj = global.ravdata_info[global.currentdatlump];
    
    global.systemmsg = "n:"+tmpobj.name+" ("+string(global.currentdatlump)+") s:"+string(tmpobj.size)+" o:"+string(tmpobj.offset)+" f:"+string(tmpobj.flags);
    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="35">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to previous lump
{

    var tmpobj;

    if(global.currentdatlump &gt; 0) {
    global.currentdatlump -= 1;
    }
    
    tmpobj = global.ravdata_info[global.currentdatlump];
    
    global.systemmsg = "n:"+tmpobj.name+" ("+string(global.currentdatlump)+") s:"+string(tmpobj.size)+" o:"+string(tmpobj.offset)+" f:"+string(tmpobj.flags);
    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="34">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skip to next level
{
    var tmp=0;
    var curx = floor(x/64);
    var cury = floor(y/64);
    var curc = (cury*32)+curx;
    var tmpstr = "";
    
    //map editor
    if(global.mapeditor &amp;&amp; global.mapeditmode == editmode.ceilings) {
        global.levelheight -= 8;
        exit;
    }

        if(global.currentlevel &lt; gamelevels.vestefin) {
        global.playerteleported=1;
        global.currentlevel += 1;
        tmpstr = M_GetMapFileName(global.currentlevel) + ".map";

        CA_UnloadMap();
        M_SetupLevel(global.currentlevel);
        CA_ConstructMapDebug(tmpstr);
        
        global.footz = 0;
        global.inair = 0;

    }
    else exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="33">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skip to previous level
{
    var tmp=0;
    var curx = floor(x/64);
    var cury = floor(y/64);
    var curc = (cury*32)+curx;
    var tmpstr="";
    
    //map editor
    if(global.mapeditor &amp;&amp; global.mapeditmode == editmode.ceilings) {
        global.levelheight += 8;
        exit;
    }

    if(global.currentlevel &gt; gamelevels.ruinsa) {
        global.playerteleported=1;
        global.currentlevel -= 1;
        
        tmpstr = M_GetMapFileName(global.currentlevel) + ".map";

        CA_UnloadMap();
        M_SetupLevel(global.currentlevel);
        CA_ConstructMapDebug(tmpstr);
        
        global.footz = 0;
        global.inair = 0;
    }
    else exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.inair == true) exit;
    if(global.waterclip &lt; 0) exit;
    else if(!global.isunderwater &amp;&amp; !global.isflying) {
        global.footz += 0.1;
        global.zspeed = 2.5;
        global.inair = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(global.gamerunning == true) {
    
    CA_PersistInfoTables();
    
    if(surface_exists(global.rendersurface)) {
        global.renderwindow = sprite_create_from_surface(global.rendersurface,0,0,640,400,false,false,0,0);
    }
    
        global.gamerunning = false;
        visible = false;
        d3d_set_fog(false,0,0,0);
        d3d_end();
        room_goto(g_menu);
    }
    
    else if(global.gamerunning == false) {
    
        sprite_delete(global.renderwindow);
        room_goto(levelarena);
        visible = true;
        d3d_start();
        d3d_set_fog(true,global.fogcolor,0,320);
        global.gamerunning = true;
    
    CA_UnpersistInfoTables();
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Noclip cheat

{
    if(global.noclip == true) {
        global.systemmsg = "noclip off";
        global.noclip = false;
    }
    else if(!global.noclip) {
        global.systemmsg = "noclip on";
        global.noclip = true;
    }

    alarm[11]=60*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
